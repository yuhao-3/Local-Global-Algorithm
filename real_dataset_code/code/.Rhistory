mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = 0, upper = 9)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-1,-1,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -99, upper = 99)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-1,-1,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -20, upper = 99)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-1,-1,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -20, upper = 20)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,0,0,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -20, upper = 20)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-2,-2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -20, upper = 20)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-2,-2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -22, upper = 22)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-2,-2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -30, upper = 30)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-2,-2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -50, upper = 50)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-2,-2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -40, upper = 40)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-2,-2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -35, upper = 35)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-1,-1,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -35, upper = 35)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-2,-2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -35, upper = 35)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-2,-2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -30, upper = 30)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-2,-2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -32, upper = 32)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(4,-1,-1,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -32, upper = 32)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(40,2,2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -32, upper = 32)
matrix(c(40,2,2,3),2,2)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(40,2,2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -3, upper = 32)
source(here("code/lasso_distribution","lasso_distribution.R"))
fun <- function(x)
{
A = matrix(c(40,2,2,3),2,2)
b = matrix(c(-2,-1),2,1)
c = 3
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
sigma2 = 1/A[2,2]
Z <- zmlasso(A,b,c)
k = exp(-0.5*A[1,1]*x^2+b[1]*x-c*abs(x))/Z
mu1 = -0.5*((A[1,2]+A[2,1])/A[2,2])*x + (b[2]-c)/A[2,2]
mu2 = 0.5*((A[1,2]+A[2,1])/A[2,2])*x - (b[2]+c)/A[2,2]
log_partI  <- pnorm(mu1/sqrt(sigma2),log=TRUE)  - dnorm(mu1/sqrt(sigma2),log=TRUE)
log_partII <- pnorm(mu2/sqrt(sigma2),log=TRUE) - dnorm(mu2/sqrt(sigma2),log=TRUE)
M <- max(c(log_partI,log_partII))
log_mpdf =  log(sqrt(sigma2)) + log(k) + M +log(exp(log_partI - M)+exp(log_partII - M))
return(exp(log_mpdf))
}
integrate(fun,lower = -3, upper = 3)
source("code","bivariate_lasso_distribution.R")
source("code","lasso_distribution","bivariate_lasso_distribution.R")
source(here("code","lasso_distribution","bivariate_lasso_distribution.R"))
if(file.exists(paste("res_LG2",dataset_name,".Rdata",sep="")))
{
load(paste("res_LG2",dataset_name,".Rdata",sep=""))
}else
{
time_LG2 <- system.time({
res_LG2 = local_global_algorithm_2(vy, mX, lambda, res_mfvb)
})
save.image(paste("res_LG2",dataset_name,".Rdata",sep=""))
}
source(here("code","lasso_distribution","bivariate_lasso_distribution.R"))
if(file.exists(paste("res_LG2",dataset_name,".Rdata",sep="")))
{
load(paste("res_LG2_new",dataset_name,".Rdata",sep=""))
}else
{
time_LG2 <- system.time({
res_LG2_new = local_global_algorithm_2(vy, mX, lambda, res_mfvb)
})
save.image(paste("res_LG2_new",dataset_name,".Rdata",sep=""))
}
source(here("code","lasso_distribution","bivariate_lasso_distribution.R"))
if(file.exists(paste("res_LG2_new",dataset_name,".Rdata",sep="")))
{
load(paste("res_LG2_new",dataset_name,".Rdata",sep=""))
}else
{
time_LG2 <- system.time({
res_LG2_new = local_global_algorithm_2(vy, mX, lambda, res_mfvb)
})
save.image(paste("res_LG2_new",dataset_name,".Rdata",sep=""))
}
source(here("code/lasso_distribution","Multi-Lasso.R"))
plot_densities <- function(ldens, cols, exclude, gold)
{
vacc <- c()
xlim <- c()
ylim <- c()
for (k in 1:length(ldens)) {
if (!(k%in%exclude)) {
xlim <- range(c(xlim,ldens[[k]]$x), finite = TRUE)
ylim <- range(c(ylim,ldens[[k]]$y), finite = TRUE)
}
}
plot(NA,type="n", xlim=xlim, ylim=ylim, xlab="", ylab="")
for (k in 1:length(ldens)) {
lines(ldens[[k]]$x,ldens[[k]]$y, col=cols[k], lwd=2)
acc <- 1 - 0.5*trapint(ldens[[gold]]$x, abs(ldens[[gold]]$y - ldens[[k]]$y))
vacc[k] <- acc
}
return(vacc)
}
N <- 10000
nsd <- 5
vmu_lm <- vbeta_lm
vsigma_lm <- summary(res_lm)$coefficients[,2]
vmu_bem <- res_bem$vbeta
vsigma_bem <- res_bem$vse[-(p+1)]
# Parameter for LG1
vmu_mfvb    <- res_mfvb$vmu_til
vsigma_mfvb <- sqrt(diag(res_mfvb$mSigma_til))
vmu_LG <- res_LG1$vmu_til
vsigma_LG <- sqrt(diag(res_LG1$mSigma_til))
va = res_LG1$a
vb = res_LG1$b
cc = res_LG1$c
# Paraemter for LG2
vmu_LG2 <- res_LG2$vmu_til
vsigma_LG2 <- sqrt(diag(res_LG2$mSigma_til))
vA = res_LG2$A
vb2 = res_LG2$b
cc2 = res_LG2$c
# # Paraemter for LG2 new
# vmu_LG2 <- res_LG2_new$vmu_til
# vsigma_LG2 <- sqrt(diag(res_LG2_new$mSigma_til))
#
# vA = res_LG2_new$A
# vb2 = res_LG2_new$b
# cc2 = res_LG2_new$c
pdf(here("figures",paste("lasso_densities_",dataset_name,".pdf",sep="")), width= 12, height=8)
cols <- c("red", "blue", "green", "orange","purple", "black","darkgray")
exclude <- c(1,2)
XTX <- t(mX)%*%mX
XTy <- t(mX)%*%vy
mai.dft <- c(1.02,0.82,0.82,0.42) #par("mai") # Defaults
op <- par(mai=mai.dft)
pcntB <- 0.3
pcntL <- 0.3
pcntT <- 0.3
pcntR <- 0.3
mai.new <- c(pcntB,pcntL,pcntT,pcntR) #*c(1.02,0.82,0.82,0.42)
par(mfrow=c(3,3),mai=mai.new)
ranges <- apply(res_gibbs$mBeta[-c(1:nburn),], 2, range)
mAcc <- matrix(0,9,p)
for (j in 1:p) {
#if (!is.nan(vsigma_bem[j])) {
#  L <- min(c(ranges[1,j],qnorm(0.001,vmu_bem[j], vsigma_bem[j])))
#  R <- max(c(ranges[2,j],qnorm(0.999,vmu_bem[j], vsigma_bem[j])))
#} else {
L <- ranges[1,j]
R <- ranges[2,j]
#}
dens <- density(res_gibbs$mBeta[-c(1:nburn),j], from = L, to=R, n=N)
xg <- dens$x
ldens <- list()
ldens[[1]] <- list(x=xg,y=dnorm(xg,vmu_bem[j], vsigma_bem[j]))
ldens[[2]] <- list(x=xg,y=dens$y)
ldens[[3]] <- list(x=xg,y=dnorm(xg,vmu_mfvb[j], vsigma_mfvb[j]))
ldens[[4]] <-
vb_phc_grad(
xg,
res_mfvb$a_til,
res_mfvb$b_til,
res_mfvb$vmu_til,
res_mfvb$mSigma_til,
XTX,
XTy,
lambda,
j
)
ldens[[5]] <- list(x=xg, y = dlasso(xg,va[j],vb[j],cc))
ldens[[6]] <- list(x=xg, y = dnorm(xg,vmu_LG[j], vsigma_LG[j]))
ldens[[7]] <- list(x=xg, y = dmmlasso1(xg,vA[[j]],vb2[[j]],cc2))
ldens[[8]] <- list(x=xg, y = dmmlasso2(xg,vA[[j]],vb2[[j]],cc2))
ldens[[9]] <- list(x=xg, y = dnorm(xg,vmu_LG2[j], vsigma_LG2[j]))
vacc <- plot_densities(ldens, cols, exclude, gold=2)
mAcc[,j] <- vacc
methods <- c("BEM+SE","MCMC", "VB", "VB-PHC","LG_Local","LG_Global","LG2_Local1","LG2_Local2","LG2_Global")
if (j==1) {
legend("topright",
legend=methods,
text.col=cols[1:7],
border = FALSE)
}
}
dev.off()
summ <- cbind(round(100*apply(mAcc[-1,],1,summary),1))
colnames(summ) <- methods[-1]
summ
