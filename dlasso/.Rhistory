library(flare)
data(eyedata)
dataset_name <- "eyedata"
vy <- (y - mean(y))/sd(y)
mX <- scale(x, center = TRUE, scale = TRUE)
n <- nrow(mX)
p <- ncol(mX)
source(here("code","bayesian_lasso_gibbs (2).R"))
u <- 1.0E-4
v <- 1.0E-4
a <- 1.0E-4
b <- 1.0E-4
nburn <- 5000
nkeep <- 50000
nsamples <- nburn + nkeep
lambda_prior <- list(lambda_start=1, prior="gamma",u=1,v=1)
set.seed(113)
ti_MCMC <- system.time({
res_gibbs <- bayesian_lasso_gibbs(vy, mX, lambda=lambda_prior, nsamples=nsamples)
})[3]
set.seed(1333)
res_gibbs1 <- bayesian_lasso_gibbs(vy, mX, lambda=lambda_prior, nsamples=nsamples)
set.seed(223)
res_gibbs2 <- bayesian_lasso_gibbs(vy, mX, lambda=lambda_prior, nsamples=nsamples)
# Gelman_Rubin R hat
library(coda)
inds <- 1:p
GR_beta <- vector('list', length(inds))
for(i in inds){
GR_beta[[i]] <- gelman.diag(mcmc.list(mcmc(res_gibbs$mBeta[-(1:nburn),i]),mcmc(res_gibbs1$mBeta[-(1:nburn),i]),mcmc(res_gibbs2$mBeta[-(1:nburn),i])))
}
for(i in 1:p){
if(GR_beta[[i]]$psrf[1,1]>1.1){
print(i)}
}
# nburn =140000
GR_sig <- gelman.diag(mcmc.list(mcmc(res_gibbs$vsigma2[-(1:nburn)]),mcmc(res_gibbs1$vsigma2[-(1:nburn)]),mcmc(res_gibbs2$vsigma2[-(1:nburn)])))
GR_lam <- gelman.diag(mcmc.list(mcmc(res_gibbs$vlambda2[-(1:nburn)]),mcmc(res_gibbs1$vlambda2[-(1:nburn)]),mcmc(res_gibbs2$vlambda2[-(1:nburn)])))
GR_sig
GR_lam
lambda2 <- mean( res_gibbs$vlambda2 )
lambda <- sqrt(lambda2)
lambda2 <- quantile(res_gibbs$vlambda2, probs=0.999)
lambda <- sqrt(lambda2)
lambda
plot(density(res_gibbs$vlambda2))
nburn <- 5000
nkeep <- 80000
nsamples <- nburn + nkeep
lambda_prior <- list(lambda_start=1, prior="gamma",u=1,v=1)
set.seed(113)
ti_MCMC <- system.time({
res_gibbs <- bayesian_lasso_gibbs(vy, mX, lambda=lambda_prior, nsamples=nsamples)
})[3]
ti_MCMC
lambda2 <- mean( res_gibbs$vlambda2 )
lambda <- sqrt(lambda2)
lambda2 <- quantile(res_gibbs$vlambda2, probs=0.999)
lambda <- sqrt(lambda2)
lambda
plot(density(res_gibbs$vlambda2))
plot(res_gibbs$vlambda2,type='l')
source(here("code","bayesian_em_lasso.R"))
time_bem <- system.time({
res_bem <-
bayesian_lasso_em_truncate(vy,
mX,
lambda = lambda, a, b,
vbeta_init = rep(0,p),
sigma2_init = 1,
VERBOSE=FALSE, CALC_SE=FALSE)
})
set.seed(323)
# mX = mX[,-8]   # Use it just for body fat
# p=p-1         # Use it just for body fat
res_lm <- lm(vy~-1+mX)
vbeta_lm <- matrix(res_lm$coef,p,1)
sigma2_lm <- sum((vy - mX%*%vbeta_lm)^2)/n
lambda_glmnet <- 2*n*lambda*sqrt(res_bem$sigma2)
lasso_mod = glmnet(mX,
vy,
alpha = 1,
lambda = lambda_glmnet) # Fit lasso model on training data
sigma2_lm <- sum((vy - mX%*%lasso_mod$beta)^2)/n
sigma2_lm
source(here("code","bayesian_lasso_mfvb.R"))
set.seed(113)
lambda_prior <- list(lambda_start=1, prior="gamma",u=1,v=1)
#nsamples <- 150000
ti_mfvb <- system.time({
res_mfvb <- bayesian_lasso_mfvb(vy, mX, lambda_prior, sigma2_hat=sigma2_lm, a, b, maxiter=nsamples,                                                               tol=1.0E-6)
})[3]
ti_mfvb
source("univariate_local_global.R")
set.seed(113)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
if(p<n){
ti_LGU <- system.time({
res <- univariate_local_global(vy, mX, lambda,
vmu_init=res_mfvb$vmu_til,
mSigma_init=res_mfvb$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til)
})[3]
}else{
ti_LGU <- system.time({
res <- univariate_local_global(vy, mX, lambda,
vmu_init=res_mfvb$vmu_til,
mSigma_init=res_mfvb$vsigma2_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til)
})[3]
}
ti_LGU
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
log(0)
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
source("bivariate_local_global.R")
set.seed(333)
lambda = exp(lgamma(res_mfvb$u_til+0.5) - lgamma(res_mfvb$u_til) - 0.5*log(res_mfvb$v_til))
ti_LGB <- system.time({
res_bv <- bivariate_local_global(vy, mX, lambda,
vmu_init=res$vmu_til,
mSigma_init=res$mSigma_til,
a_til=res_mfvb$a_til,
b_til=res_mfvb$b_til,
damp=0.005)
})[3]
